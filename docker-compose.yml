version: '3'

services:
  server-aligner:
    image: bielr/util-aligner-server:0.2
    restart: unless-stopped
    build:
      context: ./docker
      dockerfile: ./Dockerfile
    depends_on:
      - rabbitmq
      - mongo
    command:
      - celery
      - -A
      - server_queue
      - worker
      - -Q
      - server_aligner
      - -l
      - info
      - -c
      - "${SERVER_ALIGNER_CONCURRENCY:?SERVER_ALIGNER_CONCURRENCY not set in .env}"
    volumes:
      - .:/opt/:rw
    environment:
      - CELERY_TASK_DEFAULT_QUEUE=server_aligner
    networks:
      server-net:
        ipv4_address: 172.20.0.2
        aliases: [server-aligner]

  server-comparer:
    image: bielr/util-aligner-server:0.2
    restart: unless-stopped
    # build:
    #   context: ./docker
    #   dockerfile: ./Dockerfile
    depends_on:
      - rabbitmq
      - mongo
    command:
      - celery
      - -A
      - server_queue
      - worker
      - -Q
      - server_comparer
      - -l
      - info
    volumes:
      - .:/opt/:rw
    environment:
      - CELERY_TASK_DEFAULT_QUEUE=server_comparer
    networks:
      server-net:
        ipv4_address: 172.20.0.3
        aliases: [server-comparer]

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    networks:
      server-net:
        ipv4_address: 172.20.0.5
        aliases: [rabbitmq]

  mongo:
    image: mongo:latest
    restart: unless-stopped
    command:
      - mongod
      - --storageEngine=wiredTiger
      - --auth
      - --bind_ip_all
      - --logpath
      - /var/log/mongodb/mongod.log
    security_opt:
      - seccomp:seccomp_numa.json
    volumes:
      - mongo-data:/data/db
      - ./mongo-initdb.d:/docker-entrypoint-initdb.d:ro
    networks:
      server-net:
        ipv4_address: 172.20.0.6
        aliases: [mongo]

volumes:
  mongo-data:

networks:
  server-net:
    ipam:
      config:
        - subnet: 172.20.0.0/24
